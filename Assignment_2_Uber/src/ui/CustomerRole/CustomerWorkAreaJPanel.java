/*
 * ProductManagerWorkAreaJPanel.java
 *
 * Created on October 3, 2008, 8:06 AM
 */
package ui.CustomerRole;

import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
//import model.MasterCarList;
import model.Product;
import model.Supplier;
import model.SupplierDirectory;







/**
 *
 * @author Rushabh
 */
public class CustomerWorkAreaJPanel extends javax.swing.JPanel {

JPanel userProcessContainer;
SupplierDirectory supplierDirectory;
//MasterCarList masterCarList;

    /** Creates new form ProductManagerWorkAreaJPanel */
    public CustomerWorkAreaJPanel(JPanel userProcessContainer, SupplierDirectory supplierDirectory) {
        initComponents();
        this.userProcessContainer= userProcessContainer;
        this.supplierDirectory = supplierDirectory;
       // this.masterCarList = masterCarList;
        
        //populateLocationCombo();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblTitle = new javax.swing.JLabel();
        btnBrowseCatalog1 = new javax.swing.JButton();
        btnFirstAvailCar = new javax.swing.JButton();
        btnCarAvailability = new javax.swing.JButton();
        btnYear = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        txtLoc = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtYear = new javax.swing.JTextField();
        btnSeatAvail = new javax.swing.JButton();
        lblMin = new javax.swing.JLabel();
        txtMin = new javax.swing.JTextField();
        lblMax = new javax.swing.JLabel();
        txtSerial = new javax.swing.JTextField();
        btnSerialNum = new javax.swing.JButton();
        lblSerial = new javax.swing.JLabel();
        txtMax1 = new javax.swing.JTextField();
        btnModelNum = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        txtModel = new javax.swing.JTextField();
        btnFleetUpdated = new javax.swing.JButton();
        btnAllCarsInCity = new javax.swing.JButton();
        btnExpiredMainCerti = new javax.swing.JButton();

        lblTitle.setBackground(new java.awt.Color(0, 0, 0));
        lblTitle.setFont(new java.awt.Font("Lucida Grande", 1, 24)); // NOI18N
        lblTitle.setForeground(new java.awt.Color(204, 0, 0));
        lblTitle.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/readytorideitout.png"))); // NOI18N
        lblTitle.setText("Welcome Dear Customer!");
        lblTitle.setIconTextGap(20);

        btnBrowseCatalog1.setText("Browse Car Catalog >>");
        btnBrowseCatalog1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBrowseCatalog1ActionPerformed(evt);
            }
        });

        btnFirstAvailCar.setText("Search First Available Car >>");
        btnFirstAvailCar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFirstAvailCarActionPerformed(evt);
            }
        });

        btnCarAvailability.setText("Car Availabilty >>");
        btnCarAvailability.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCarAvailabilityActionPerformed(evt);
            }
        });

        btnYear.setText("Search By Year >>");
        btnYear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnYearActionPerformed(evt);
            }
        });

        jLabel1.setText(" Location:");

        txtLoc.setText("                 ");
        txtLoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtLocActionPerformed(evt);
            }
        });

        jLabel2.setText("Year:");

        txtYear.setText("                 ");

        btnSeatAvail.setText("Seat Availability >>");
        btnSeatAvail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSeatAvailActionPerformed(evt);
            }
        });

        lblMin.setText("Minimum Seat:");

        txtMin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMinActionPerformed(evt);
            }
        });

        lblMax.setText("Maximum Seat:");

        txtSerial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSerialActionPerformed(evt);
            }
        });

        btnSerialNum.setText("Search By Serial Number >>");
        btnSerialNum.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSerialNumActionPerformed(evt);
            }
        });

        lblSerial.setText("Serial Number:");

        txtMax1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMax1ActionPerformed(evt);
            }
        });

        btnModelNum.setText("Search By Model Number >>");
        btnModelNum.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModelNumActionPerformed(evt);
            }
        });

        jLabel3.setText("Model number:");

        txtModel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtModelActionPerformed(evt);
            }
        });

        btnFleetUpdated.setText("Last updated Timestamp Fleet");
        btnFleetUpdated.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFleetUpdatedActionPerformed(evt);
            }
        });

        btnAllCarsInCity.setText("Cars Available in City");
        btnAllCarsInCity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAllCarsInCityActionPerformed(evt);
            }
        });

        btnExpiredMainCerti.setText("Expired Maintainence Certificate");
        btnExpiredMainCerti.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExpiredMainCertiActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtLoc, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblTitle)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(lblMin)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(txtMin, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(lblMax)
                                            .addGap(18, 18, 18)
                                            .addComponent(txtMax1, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnSeatAvail, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addComponent(btnFirstAvailCar)
                                    .addGap(24, 24, 24)
                                    .addComponent(btnCarAvailability, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(lblSerial)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(txtSerial, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(layout.createSequentialGroup()
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addComponent(jLabel3)
                                                .addComponent(jLabel2))
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(txtModel)
                                                .addGroup(layout.createSequentialGroup()
                                                    .addComponent(txtYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addGap(0, 0, Short.MAX_VALUE)))))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(btnSerialNum, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(btnModelNum, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(btnYear, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addComponent(btnFleetUpdated)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(btnAllCarsInCity, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(113, 113, 113)
                        .addComponent(btnExpiredMainCerti)))
                .addContainerGap(173, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap(434, Short.MAX_VALUE)
                    .addComponent(btnBrowseCatalog1)
                    .addGap(46, 46, 46)))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {txtMax1, txtMin});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(lblTitle)
                .addGap(55, 55, 55)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtLoc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCarAvailability)
                    .addComponent(btnFirstAvailCar))
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSerial)
                    .addComponent(txtSerial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSerialNum))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtModel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnModelNum))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnYear))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblMin)
                            .addComponent(txtMin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblMax)
                            .addComponent(txtMax1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addComponent(btnSeatAvail)))
                .addGap(42, 42, 42)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnFleetUpdated)
                    .addComponent(btnAllCarsInCity))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnExpiredMainCerti)
                .addContainerGap(81, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(207, 207, 207)
                    .addComponent(btnBrowseCatalog1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(389, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnBrowseCatalog1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBrowseCatalog1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnBrowseCatalog1ActionPerformed

    private void btnFirstAvailCarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFirstAvailCarActionPerformed
        // TODO add your handling code here:
       
       try{
       int count =0;
       Product pro;
       //Product selectedLocation = (Product) cmbLocation.getSelectedItem();
        String loc = txtLoc.getText().trim();
       //int seats = Integer.parseInt(txtSeats.getText().trim());
       for(Supplier s : supplierDirectory.getSupplierlist())
       {
       pro = s.getProductCatalog().searchFirstAvailCar(loc);
       if(pro!=null)
       { count++ ;
        pro.setBtnObject("1");
        BrowseProductsJPanel vpdjp = new BrowseProductsJPanel(userProcessContainer, supplierDirectory,pro);
        userProcessContainer.add("BrowseProductsJPanel", vpdjp);
        CardLayout layout = (CardLayout)userProcessContainer.getLayout();
        layout.next(userProcessContainer);
        return;
       }
       }
       if (count == 0)
       {
         JOptionPane.showMessageDialog(null, "Nothing found", "No result found matching your criteria!!", JOptionPane.WARNING_MESSAGE);  
       } 
       }
        catch(Exception e){
            JOptionPane.showMessageDialog(null, "Exception found" + e, "No result found matching your criteria!!", JOptionPane.WARNING_MESSAGE);
        }
   
      
    }//GEN-LAST:event_btnFirstAvailCarActionPerformed

    private void btnCarAvailabilityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCarAvailabilityActionPerformed
        // TODO add your handling code here:
       try{
       int count =0;
       Product pro;
       //Product selectedLocation = (Product) cmbLocation.getSelectedItem();
       String loc = txtLoc.getText().trim();
     //  int seats = Integer.parseInt(txtSeats.getText().trim());
       for(Supplier s : supplierDirectory.getSupplierlist())
       {
       pro = s.getProductCatalog().searchFirstAvailCar(loc);
       if(pro!=null)
       { count++ ; 
        pro.setBtnObject("2");
        BrowseProductsJPanel vpdjp = new BrowseProductsJPanel(userProcessContainer, supplierDirectory,pro);
        userProcessContainer.add("BrowseProductsJPanel", vpdjp);
        CardLayout layout = (CardLayout)userProcessContainer.getLayout();
        layout.next(userProcessContainer);
        return;
       }
       }
       if (count == 0)
       {
         JOptionPane.showMessageDialog(null, "No cars are available at this location", "No result found matching your criteria!!", JOptionPane.WARNING_MESSAGE);  
       } 
       }
        catch(Exception e){
            JOptionPane.showMessageDialog(null, "Invalid Data" + e, "No result found matching your criteria!!", JOptionPane.WARNING_MESSAGE);
        }
    
    }//GEN-LAST:event_btnCarAvailabilityActionPerformed

    private void btnYearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnYearActionPerformed
        // TODO add your handling code here:
       try{
       int count =0;
       Product pro;
       //Product selectedLocation = (Product) cmbLocation.getSelectedItem();
       String year = txtYear.getText().trim();
       int y= year.length();
       if(year.isEmpty()== true) 
       {
           JOptionPane.showMessageDialog(null, "Please enter correct year" , "No result found matching your criteria!!", JOptionPane.WARNING_MESSAGE); 
           return;
       }
       if( y != 4 || Integer.parseInt(year) > 2021 )
       {
           JOptionPane.showMessageDialog(null, "Please enter correct year" , "No result found matching your criteria!!", JOptionPane.WARNING_MESSAGE); 
           return;
       }
     // int seats = Integer.parseInt(txtYear.getText().trim());
       for(Supplier s : supplierDirectory.getSupplierlist())
       {
       pro = s.getProductCatalog().searchCarByYear(Integer.parseInt(txtYear.getText().trim()));
       if(pro!=null)
       { count++ ; 
        pro.setBtnObject("4");
        BrowseProductsJPanel vpdjp = new BrowseProductsJPanel(userProcessContainer, supplierDirectory,pro);
        userProcessContainer.add("BrowseProductsJPanel", vpdjp);
        CardLayout layout = (CardLayout)userProcessContainer.getLayout();
        layout.next(userProcessContainer);
        return;
       }
       }
       if (count == 0)
       {
         JOptionPane.showMessageDialog(null, "No cars are available for this year", "No result found matching your criteria!!", JOptionPane.WARNING_MESSAGE);  
       } 
       }
        catch(Exception e){
            JOptionPane.showMessageDialog(null, "Invalid Year Entered" , "No result found matching your criteria!!", JOptionPane.WARNING_MESSAGE);
        }
    
    
    }//GEN-LAST:event_btnYearActionPerformed

    private void btnSeatAvailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSeatAvailActionPerformed
        // TODO add your handling code here:
      
      int minSeat = 0;
      int maxSeat = 0;
     // int availSeat = 0;
      try
      {
       int count =0;
       Product pro;
          minSeat= Integer.parseInt(txtMin.getText().trim());
          maxSeat= Integer.parseInt(txtMax1.getText().trim());
          //availSeat = (maxSeat-minSeat)+ 1;
       for(Supplier s : supplierDirectory.getSupplierlist())
       {
       pro = s.getProductCatalog().searchAvailSeat(maxSeat);
       if(pro!=null)
       { count++ ; 
        pro.setBtnObject("5");
        BrowseProductsJPanel vpdjp = new BrowseProductsJPanel(userProcessContainer, supplierDirectory,pro);
        userProcessContainer.add("BrowseProductsJPanel", vpdjp);
        CardLayout layout = (CardLayout)userProcessContainer.getLayout();
        layout.next(userProcessContainer);
        return;
       }
       }
       if (count == 0)
       {
         JOptionPane.showMessageDialog(null, "No seats are available", "No result found matching your criteria!!", JOptionPane.WARNING_MESSAGE);  
       } 
       }
      
      catch(Exception e){
          JOptionPane.showMessageDialog(null, "Invalid Seat Entered", "No result found matching your criteria!!", JOptionPane.WARNING_MESSAGE);
      }

    }//GEN-LAST:event_btnSeatAvailActionPerformed

    private void btnSerialNumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSerialNumActionPerformed
        // TODO add your handling code here:
       try
      {
       int count =0;
       Product pro;
       for(Supplier s : supplierDirectory.getSupplierlist())
       {
       pro = s.getProductCatalog().searchSerialNum(txtSerial.getText().trim());
       if(pro!=null)
       { count++ ; 
        pro.setBtnObject("6");
        BrowseProductsJPanel vpdjp = new BrowseProductsJPanel(userProcessContainer, supplierDirectory,pro);
        userProcessContainer.add("BrowseProductsJPanel", vpdjp);
        CardLayout layout = (CardLayout)userProcessContainer.getLayout();
        layout.next(userProcessContainer);
        return;
       }
       }
       if (count == 0)
       {
         JOptionPane.showMessageDialog(null, "No cars found for the entered serial number", "No result found matching your criteria!!", JOptionPane.WARNING_MESSAGE);  
       } 
       }
      
      catch(Exception e){
          JOptionPane.showMessageDialog(null, "Invalid Serail Number Entered", "No result found matching your criteria!!", JOptionPane.WARNING_MESSAGE);
      }

     
    }//GEN-LAST:event_btnSerialNumActionPerformed

    private void txtMax1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMax1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMax1ActionPerformed

    private void btnModelNumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModelNumActionPerformed
        // TODO add your handling code here:
       try
      {
       int count =0;
       Product pro;
       for(Supplier s : supplierDirectory.getSupplierlist())
       {
       pro = s.getProductCatalog().searchModelNum(txtModel.getText().trim());
       if(pro!=null)
       { count++ ; 
        pro.setBtnObject("7");
        BrowseProductsJPanel vpdjp = new BrowseProductsJPanel(userProcessContainer, supplierDirectory,pro);
        userProcessContainer.add("BrowseProductsJPanel", vpdjp);
        CardLayout layout = (CardLayout)userProcessContainer.getLayout();
        layout.next(userProcessContainer);
        return;
       }
       }
       if (count == 0)
       {
         JOptionPane.showMessageDialog(null, "No cars found for the entered Model number", "No result found matching your criteria!!", JOptionPane.WARNING_MESSAGE);  
       } 
       }
      
      catch(Exception e){
          JOptionPane.showMessageDialog(null, "Invalid Model Number Entered", "No result found matching your criteria!!", JOptionPane.WARNING_MESSAGE);
      }
  
    }//GEN-LAST:event_btnModelNumActionPerformed

    private void btnExpiredMainCertiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExpiredMainCertiActionPerformed
        // TODO add your handling code here:
        try
      {
       int count =0;
       Product pro;
       for(Supplier s : supplierDirectory.getSupplierlist())
       {
       pro = s.getProductCatalog().searchExpiredCerti();
       if(pro!=null)
       { count++ ; 
        pro.setBtnObject("8");
        BrowseProductsJPanel vpdjp = new BrowseProductsJPanel(userProcessContainer, supplierDirectory,pro);
        userProcessContainer.add("BrowseProductsJPanel", vpdjp);
        CardLayout layout = (CardLayout)userProcessContainer.getLayout();
        layout.next(userProcessContainer);
        return;
       }
       }
       if (count == 0)
       {
         JOptionPane.showMessageDialog(null, "No cars found with Expired Maintaince Certificate", "No result found matching your criteria!!", JOptionPane.WARNING_MESSAGE);  
       } 
       }
      
      catch(Exception e){
          JOptionPane.showMessageDialog(null, "Exception", "No result found matching your criteria!!", JOptionPane.WARNING_MESSAGE);
      }
  
    }//GEN-LAST:event_btnExpiredMainCertiActionPerformed

    private void btnAllCarsInCityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAllCarsInCityActionPerformed
        // TODO add your handling code here:
       try{
       int count =0;
       Product pro;
       //Product selectedLocation = (Product) cmbLocation.getSelectedItem();
      // String loc = txtLoc.getText().trim();
     //  int seats = Integer.parseInt(txtSeats.getText().trim());
       for(Supplier s : supplierDirectory.getSupplierlist())
       {
       pro = s.getProductCatalog().searchCarAvailable();
       if(pro!=null)
       { count++ ; 
        pro.setBtnObject("10");
        BrowseProductsJPanel vpdjp = new BrowseProductsJPanel(userProcessContainer, supplierDirectory,pro);
        userProcessContainer.add("BrowseProductsJPanel", vpdjp);
        CardLayout layout = (CardLayout)userProcessContainer.getLayout();
        layout.next(userProcessContainer);
        return;
       }
       }
       if (count == 0)
       {
         JOptionPane.showMessageDialog(null, "No cars are currently available in this city", "No result found matching your criteria!!", JOptionPane.WARNING_MESSAGE);  
       } 
       }
        catch(Exception e){
            JOptionPane.showMessageDialog(null, "Invalid Data" + e, "No result found matching your criteria!!", JOptionPane.WARNING_MESSAGE);
        }
    
    }//GEN-LAST:event_btnAllCarsInCityActionPerformed

    private void btnFleetUpdatedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFleetUpdatedActionPerformed
        // TODO add your handling code here:
       try
       {
       Product pro;
       for(Supplier s : supplierDirectory.getSupplierlist())
       {
       pro = s.getProductCatalog().getFleetTimestamp();
       if(pro!=null){
          String date = pro.getFleetTimeStamp();
        JOptionPane.showMessageDialog(this, "Last Updated Timestamp: " + date, "Fleet Timestamp", JOptionPane.WARNING_MESSAGE);  
       }
       else
          
           JOptionPane.showMessageDialog(this, "No Update", "Fleet Timestamp", JOptionPane.WARNING_MESSAGE);
       }
       }
       catch(Exception e)
       {
           JOptionPane.showMessageDialog(this, "No Update", "No result found matching your criteria!!", JOptionPane.WARNING_MESSAGE);
       }
    }//GEN-LAST:event_btnFleetUpdatedActionPerformed

    private void txtLocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtLocActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtLocActionPerformed

    private void txtSerialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSerialActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSerialActionPerformed

    private void txtModelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtModelActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtModelActionPerformed

    private void txtMinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMinActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMinActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAllCarsInCity;
    private javax.swing.JButton btnBrowseCatalog1;
    private javax.swing.JButton btnCarAvailability;
    private javax.swing.JButton btnExpiredMainCerti;
    private javax.swing.JButton btnFirstAvailCar;
    private javax.swing.JButton btnFleetUpdated;
    private javax.swing.JButton btnModelNum;
    private javax.swing.JButton btnSeatAvail;
    private javax.swing.JButton btnSerialNum;
    private javax.swing.JButton btnYear;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel lblMax;
    private javax.swing.JLabel lblMin;
    private javax.swing.JLabel lblSerial;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JTextField txtLoc;
    private javax.swing.JTextField txtMax1;
    private javax.swing.JTextField txtMin;
    private javax.swing.JTextField txtModel;
    private javax.swing.JTextField txtSerial;
    private javax.swing.JTextField txtYear;
    // End of variables declaration//GEN-END:variables

    
    
    
}
